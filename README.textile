h1. JUnit Testdata Rule

p. JUnit "@TestRule@":http://kentbeck.github.com/junit/javadoc/4.10/org/junit/rules/TestRule.html to load data into a database before a test runs.

p. Testdata can either specified on a per test basis, or with the help of "@ClassRule@":http://kentbeck.github.com/junit/javadoc/4.10/org/junit/ClassRule.html for a whole class (which may be a JUnit Testsuite which contains several other classes). However the main audience of this module are projects which want/need specific "data for a single test":http://github.com/sebhoss/junit-testdata-rule/wiki/why. There are "several alternatives":http://github.com/sebhoss/junit-testdata-rule/wiki/alternatives for this module.

h2. Usage

bc.. 
  public class YourTestClass {

    @Rule
    public TestData testData = ...;

    @Test
    @Load("customers.sql")
    public void shouldSeeCustomersInDatabase() {
      // ...
    }

  }

h3. Supported file formats

* *.SQL* files for arbitrary SQL statements.
* *.XML* files created with the "DbUnit":http://www.dbunit.org/ schema.
* *.XML* files created with the "Liquibase":http://www.liquibase.org/ "schema":http://www.liquibase.org/manual/databasechangelog.
* "Create an issue for your desired format":https://github.com/sebhoss/junit-testdata-rule/issues

h3. Integration

p. Spring & Guice have their own module. Both supply a default configuration for the TestData rule which should be suitable for the majority of use-cases. Additional factories/builders are available for projects which do not use Spring or Guice. See the following pages for more details:

* "Spring based projects":http://github.com/sebhoss/junit-testdata-rule/wiki/spring
* "Guice based projects":http://github.com/sebhoss/junit-testdata-rule/wiki/guice
* "Standalone projects":http://github.com/sebhoss/junit-testdata-rule/wiki/builder


h2. Development

h3. License

p. This program is free software. It comes without any warranty, to the extent permitted by applicable law. You can redistribute it and/or modify it under the terms of the Do What The Fuck You Want To Public License, Version 2, as published by Sam Hocevar. See "http://sam.zoy.org/wtfpl/COPYING":http://sam.zoy.org/wtfpl/COPYING for more details.

h3. Setup

p. This project is using "Maven":http://maven.apache.org/, "Eclipse":http://eclipse.org/ and "Git":http://git-scm.com/ as the main development tools. To build the project yourself just download & install at least Maven 3.0 and call *mvn install* inside the project folder. Maven should then proceed to clean, build, package and install this module.

h3. Versioning

p. This project follows the "semantic versioning":http://semver.org/ guidelines.